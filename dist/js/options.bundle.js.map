{"version":3,"file":"options.bundle.js","mappings":"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","sources":["webpack://authenticator-plus-chrome/./src/lib/crypto.js","webpack://authenticator-plus-chrome/./src/constants/password.js","webpack://authenticator-plus-chrome/./src/lib/generate-password.js","webpack://authenticator-plus-chrome/./src/js/options.js"],"sourcesContent":["/*!\n * Title: AuthenticatorPlus\n * Author: Jay Simons\n * Website: https://1337707.xyz\n * Email: jay@designly.biz\n * (C) 2025\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nexport async function setPassword(password) {\n\tif (!password || typeof password !== 'string') {\n\t\tthrow new Error('Invalid password');\n\t}\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.local.set({ encryptionPassword: password }, () => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\treject(new Error(chrome.runtime.lastError.message));\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport async function getPassword() {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.local.get(['encryptionPassword'], result => {\n\t\t\tconst password = result.encryptionPassword;\n\t\t\tresolve(password || null);\n\t\t});\n\t});\n}\n\nexport async function passwordIsSet() {\n\tconst password = await getPassword();\n\treturn password !== null;\n}\n\nasync function getPasswordKey() {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.local.get(['encryptionPassword'], async result => {\n\t\t\tconst password = result.encryptionPassword;\n\t\t\tif (!password) {\n\t\t\t\tconst message =\n\t\t\t\t\t'No password found in local storage. Please set your encryption password in options.';\n\t\t\t\treject(new Error(message));\n\t\t\t\talert(message);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst keyMaterial = await crypto.subtle.importKey(\n\t\t\t\t'raw',\n\t\t\t\tnew TextEncoder().encode(password),\n\t\t\t\t{ name: 'PBKDF2' },\n\t\t\t\tfalse,\n\t\t\t\t['deriveKey'],\n\t\t\t);\n\t\t\tconst salt = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n\t\t\tconst key = await crypto.subtle.deriveKey(\n\t\t\t\t{\n\t\t\t\t\tname: 'PBKDF2',\n\t\t\t\t\tsalt,\n\t\t\t\t\titerations: 100000,\n\t\t\t\t\thash: 'SHA-256',\n\t\t\t\t},\n\t\t\t\tkeyMaterial,\n\t\t\t\t{ name: 'AES-GCM', length: 256 },\n\t\t\t\ttrue,\n\t\t\t\t['encrypt', 'decrypt'],\n\t\t\t);\n\t\t\tresolve(key);\n\t\t});\n\t});\n}\n\nasync function encryptData(data) {\n\tconst key = await getPasswordKey();\n\tconst iv = crypto.getRandomValues(new Uint8Array(12));\n\t// Convert data to string if it's an object\n\tconst stringData = typeof data === 'object' ? JSON.stringify(data) : String(data);\n\tconst encodedData = new TextEncoder().encode(stringData);\n\tconst encrypted = await crypto.subtle.encrypt({ name: 'AES-GCM', iv }, key, encodedData);\n\treturn { encrypted, iv: Array.from(iv) };\n}\n\nasync function decryptData(encrypted, ivArray) {\n\tconst key = await getPasswordKey();\n\tconst iv = new Uint8Array(ivArray);\n\tconst decrypted = await crypto.subtle.decrypt({ name: 'AES-GCM', iv }, key, encrypted);\n\tconst decodedString = new TextDecoder().decode(decrypted);\n\t// Try to parse as JSON if possible\n\ttry {\n\t\treturn JSON.parse(decodedString);\n\t} catch (e) {\n\t\t// If parsing fails, return the string as-is\n\t\treturn decodedString;\n\t}\n}\n\n// Helper function to convert ArrayBuffer to Base64 string\nfunction arrayBufferToBase64(buffer) {\n\tconst binary = String.fromCharCode(...new Uint8Array(buffer));\n\treturn btoa(binary);\n}\n\n// Helper function to convert Base64 string back to ArrayBuffer\nfunction base64ToArrayBuffer(base64) {\n\tconst binary = atob(base64);\n\tconst bytes = new Uint8Array(binary.length);\n\tfor (let i = 0; i < binary.length; i++) {\n\t\tbytes[i] = binary.charCodeAt(i);\n\t}\n\treturn bytes.buffer;\n}\n\nexport async function secureStore(key, value) {\n\tif (!key || value === undefined) {\n\t\tthrow new Error('Invalid key or value');\n\t}\n\tconst { encrypted, iv } = await encryptData(value);\n\tif (!encrypted || !iv) {\n\t\tthrow new Error('Failed to encrypt data');\n\t}\n\n\t// Convert ArrayBuffer to Base64 string for storage\n\tconst encryptedBase64 = arrayBufferToBase64(encrypted);\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst data = { encrypted: encryptedBase64, iv };\n\t\tchrome.storage.sync.set({ [key]: data }, () => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\treject(new Error(chrome.runtime.lastError.message));\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport async function secureGet(key) {\n\tif (!key) {\n\t\tthrow new Error('Invalid key');\n\t}\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.sync.get([key], async result => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\treject(new Error(chrome.runtime.lastError.message));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst data = result[key];\n\t\t\tif (!data) {\n\t\t\t\tresolve(null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst { encrypted: encryptedBase64, iv } = data;\n\t\t\t\tif (!encryptedBase64 || !iv) {\n\t\t\t\t\tthrow new Error('Invalid data format');\n\t\t\t\t}\n\t\t\t\tconst encrypted = base64ToArrayBuffer(encryptedBase64);\n\t\t\t\tconst value = await decryptData(encrypted, iv);\n\t\t\t\tresolve(value);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport async function secureGetAll() {\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.sync.get(null, async result => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\treject(new Error(chrome.runtime.lastError.message));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst decryptedItems = {};\n\t\t\tfor (const [key, data] of Object.entries(result)) {\n\t\t\t\tif (data && data.encrypted && data.iv) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst encrypted = base64ToArrayBuffer(data.encrypted);\n\t\t\t\t\t\tconst value = await decryptData(encrypted, data.iv);\n\t\t\t\t\t\tdecryptedItems[key] = value;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tdecryptedItems[key] = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdecryptedItems[key] = data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve(decryptedItems);\n\t\t});\n\t});\n}\n\nexport async function secureDelete(key) {\n\tif (!key) {\n\t\tthrow new Error('Invalid key');\n\t}\n\treturn new Promise((resolve, reject) => {\n\t\tchrome.storage.sync.remove(key, () => {\n\t\t\tif (chrome.runtime.lastError) {\n\t\t\t\treject(new Error(chrome.runtime.lastError.message));\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n","export const passwordSettings = {\n\tendpoint: 'https://wsr-pw-strength-worker.wsrapp.workers.dev',\n\tminScore: 3,\n};\n","const nouns = [\n\t'Ant',\n\t'Arc',\n\t'Arm',\n\t'Art',\n\t'Ash',\n\t'Bag',\n\t'Bar',\n\t'Bat',\n\t'Bay',\n\t'Bed',\n\t'Bee',\n\t'Bit',\n\t'Box',\n\t'Boy',\n\t'Bug',\n\t'Bus',\n\t'Cap',\n\t'Car',\n\t'Cat',\n\t'Cow',\n\t'Cup',\n\t'Cut',\n\t'Day',\n\t'Dog',\n\t'Dot',\n\t'Ear',\n\t'Egg',\n\t'End',\n\t'Eye',\n\t'Fan',\n\t'Fax',\n\t'Fig',\n\t'Fly',\n\t'Fog',\n\t'Fox',\n\t'Fun',\n\t'Gap',\n\t'Gas',\n\t'Gel',\n\t'Gem',\n\t'Gym',\n\t'Hat',\n\t'Hay',\n\t'Hen',\n\t'Hit',\n\t'Hog',\n\t'Hot',\n\t'Hub',\n\t'Ice',\n\t'Ink',\n\t'Jam',\n\t'Jar',\n\t'Jet',\n\t'Jog',\n\t'Joy',\n\t'Key',\n\t'Kid',\n\t'Kit',\n\t'Lab',\n\t'Lap',\n\t'Law',\n\t'Leg',\n\t'Lid',\n\t'Lip',\n\t'Log',\n\t'Man',\n\t'Map',\n\t'Mat',\n\t'Mud',\n\t'Net',\n\t'Nut',\n\t'Oak',\n\t'Oar',\n\t'Oil',\n\t'Owl',\n\t'Pad',\n\t'Pan',\n\t'Pen',\n\t'Pet',\n\t'Pie',\n\t'Pig',\n\t'Pit',\n\t'Pot',\n\t'Rat',\n\t'Ray',\n\t'Red',\n\t'Rib',\n\t'Rid',\n\t'Rim',\n\t'Rip',\n\t'Row',\n\t'Rug',\n\t'Run',\n\t'Rye',\n\t'Sad',\n\t'Saw',\n\t'Sea',\n\t'Sew',\n\t'Sky',\n\t'Sly',\n\t'Sun',\n\t'Tab',\n\t'Tan',\n\t'Tap',\n\t'Tea',\n\t'Tie',\n\t'Toe',\n\t'Toy',\n\t'Tub',\n\t'Tug',\n\t'Van',\n\t'Vet',\n\t'Wax',\n\t'Web',\n\t'Wig',\n\t'Win',\n\t'Wok',\n\t'Yam',\n\t'Yen',\n\t'Zip',\n];\n\nconst verbs = [\n\t'Act',\n\t'Add',\n\t'Aim',\n\t'Air',\n\t'Ask',\n\t'Bar',\n\t'Bat',\n\t'Beg',\n\t'Bet',\n\t'Bid',\n\t'Boo',\n\t'Bow',\n\t'Box',\n\t'Bud',\n\t'Bug',\n\t'Buy',\n\t'Can',\n\t'Car',\n\t'Cat',\n\t'Cry',\n\t'Cut',\n\t'Dig',\n\t'Dip',\n\t'Dot',\n\t'Dry',\n\t'Dye',\n\t'Eat',\n\t'End',\n\t'Era',\n\t'Fan',\n\t'Fax',\n\t'Fit',\n\t'Fix',\n\t'Fog',\n\t'Fry',\n\t'Fun',\n\t'Gap',\n\t'Gas',\n\t'Get',\n\t'Gig',\n\t'Gin',\n\t'Gun',\n\t'Gut',\n\t'Ham',\n\t'Hat',\n\t'Hid',\n\t'Hit',\n\t'Hop',\n\t'Hug',\n\t'Hum',\n\t'Ice',\n\t'Ink',\n\t'Jam',\n\t'Jar',\n\t'Jaw',\n\t'Jog',\n\t'Jot',\n\t'Joy',\n\t'Jug',\n\t'Ken',\n\t'Kid',\n\t'Kit',\n\t'Lab',\n\t'Lag',\n\t'Lap',\n\t'Lay',\n\t'Led',\n\t'Let',\n\t'Lit',\n\t'Log',\n\t'Lop',\n\t'Lot',\n\t'Mad',\n\t'Map',\n\t'Mat',\n\t'Mix',\n\t'Mop',\n\t'Mug',\n\t'Nab',\n\t'Nap',\n\t'Nil',\n\t'Nip',\n\t'Nod',\n\t'Nor',\n\t'Oar',\n\t'Oil',\n\t'Pad',\n\t'Pan',\n\t'Pat',\n\t'Pen',\n\t'Pet',\n\t'Pit',\n\t'Pop',\n\t'Pot',\n\t'Pug',\n\t'Put',\n\t'Qed',\n\t'Rag',\n\t'Ran',\n\t'Rat',\n\t'Rev',\n\t'Rid',\n\t'Rig',\n\t'Rim',\n\t'Rip',\n\t'Rub',\n\t'Rug',\n\t'Run',\n\t'Rut',\n\t'Sag',\n\t'Sap',\n\t'Sat',\n\t'Saw',\n\t'Say',\n\t'Seal',\n\t'See',\n\t'Sew',\n\t'Sin',\n\t'Sit',\n\t'Ski',\n\t'Sky',\n\t'Sly',\n\t'Sob',\n\t'Sow',\n\t'Spy',\n\t'Sun',\n\t'Tab',\n\t'Tag',\n\t'Tap',\n\t'Tax',\n\t'Tie',\n\t'Tip',\n\t'Toe',\n\t'Top',\n\t'Tug',\n\t'Use',\n\t'Vex',\n\t'Vie',\n\t'Wag',\n\t'Win',\n\t'Woo',\n\t'Wry',\n\t'Yap',\n\t'Yen',\n\t'Zip',\n];\n\nfunction getRandomElement(array) {\n\tconst randomArray = new Uint32Array(1);\n\tcrypto.getRandomValues(randomArray);\n\tconst randomIndex = randomArray[0] % array.length;\n\treturn array[randomIndex];\n}\n\nexport default function generatePassword() {\n\tconst words = [];\n\n\twhile (words.length < 4) {\n\t\tconst isOdd = words.length % 2 === 1;\n\t\tconst useWords = isOdd ? verbs : nouns;\n\t\tconst word = getRandomElement(useWords);\n\t\tif (!words.includes(word)) words.push(word);\n\t}\n\n\treturn `${words.join('')}`;\n}\n","/*!\n * Title: AuthenticatorPlus\n * Author: Jay Simons\n * Website: https://1337707.xyz\n * Email: jay@designly.biz\n * (C) 2025\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { secureGetAll, secureDelete, setPassword, passwordIsSet } from '@lib/crypto';\nimport { passwordSettings } from '../constants/password';\nimport generatePassword from '../lib/generate-password';\n\nconst accountsList = document.getElementById('accounts-list');\nconst clearAccountsBtn = document.getElementById('clear-accounts');\nconst clearAllDataBtn = document.getElementById('clear-all-data-btn');\nconst optionsCloseBtn = document.getElementById('options-close-btn');\nconst accountTemplate = document.getElementById('account-template');\nconst requestCameraBtn = document.getElementById('req-camera-btn');\nconst requestCameraContainer = document.getElementById('req-camera');\nconst reqCameraMessage = document.getElementById('req-camera-message');\nconst camAccessGranted = document.getElementById('cam-access-granted');\nconst passwordFormContainer = document.getElementById('password-form-container');\nconst passwordInput = document.getElementById('password');\nconst passwordSubmit = document.getElementById('submit-password');\nconst generatePasswordBtn = document.getElementById('generate-password');\nconst passwordIsSetContainer = document.getElementById('password-is-set');\nconst changePasswordBtn = document.getElementById('change-password-btn');\nconst introContainer = document.getElementById('intro');\nconst introCloseBtn = document.getElementById('intro-close-btn');\nconst helpBtn = document.getElementById('help-btn');\nconst qrCodeModal = document.getElementById('qr-code-modal');\nconst qrCode = document.getElementById('qr-code');\nconst closeQrCodeBtn = document.getElementById('close-qr-code-btn');\n\nconst defaultReqCameraMessage = reqCameraMessage.textContent;\n\nasync function loadAccounts() {\n\ttry {\n\t\tconst decryptedData = await secureGetAll();\n\n\t\t// Clear and rebuild the accounts list\n\t\taccountsList.innerHTML = '';\n\n\t\tif (Object.keys(decryptedData).length === 0) {\n\t\t\taccountsList.innerHTML = '<p id=\"accounts-list-none\">No accounts added yet.</p>';\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, account] of Object.entries(decryptedData)) {\n\t\t\tconst clone = accountTemplate.content.cloneNode(true);\n\t\t\tconst span = clone.querySelector('span');\n\t\t\tconst deleteButton = clone.querySelector('button.delete-account');\n\t\t\tconst qrButton = clone.querySelector('button.show-qr');\n\n\t\t\tspan.textContent = `[${account.issuer || 'No issuer'}] ${account.name}`;\n\t\t\tdeleteButton.dataset.key = key;\n\t\t\tdeleteButton.dataset.name = account.name;\n\t\t\tqrButton.dataset.key = key;\n\t\t\tqrButton.dataset.name = account.name;\n\t\t\tqrButton.dataset.secret = account.secret;\n\t\t\tqrButton.dataset.issuer = account.issuer;\n\n\t\t\taccountsList.appendChild(clone);\n\t\t}\n\n\t\tbindDeleteButtons();\n\t\tbindShowQrButtons();\n\t} catch (error) {\n\t\tconsole.error('Failed to load accounts:', error);\n\t\taccountsList.innerHTML =\n\t\t\t'<p class=\"failed-account-error\">Failed to load accounts. Please check your encryption password.</p>';\n\t}\n}\n\nfunction bindDeleteButtons() {\n\tdocument.querySelectorAll('button.delete-account').forEach(btn => {\n\t\tbtn.addEventListener('click', confirmDeleteAccount);\n\t});\n}\n\nfunction bindShowQrButtons() {\n\tdocument.querySelectorAll('button.show-qr').forEach(btn => {\n\t\tbtn.addEventListener('click', showQrCode);\n\t});\n}\n\nconst qr = new QRCode(qrCode);\n\nasync function showQrCode(event) {\n\tconst button = event.target.closest('button.show-qr');\n\tif (!button) return;\n\n\tconst secret = button.dataset.secret;\n\tconst issuer = button.dataset.issuer;\n\tconst name = button.dataset.name;\n\n\tconst otpauth = `otpauth://totp/${issuer}:${name}?secret=${secret}&issuer=${issuer}`;\n\n\tqr.clear();\n\tqr.makeCode(otpauth);\n\tqrCodeModal.classList.remove('hidden');\n}\n\ncloseQrCodeBtn.addEventListener('click', () => {\n\tqrCodeModal.classList.add('hidden');\n});\n\nasync function confirmDeleteAccount(event) {\n\tconst button = event.target.closest('button.delete-account');\n\tif (!button) return;\n\n\tconst key = button.dataset.key;\n\tconst name = button.dataset.name;\n\n\tif (confirm(`Are you sure you want to delete ${name}?`)) {\n\t\ttry {\n\t\t\tawait secureDelete(key);\n\t\t\tawait loadAccounts();\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to delete account:', error);\n\t\t\talert('Failed to delete account. Please try again.');\n\t\t}\n\t}\n}\n\nasync function confirmDeleteAllAccounts() {\n\tif (confirm('Are you sure you want to delete all accounts? This action cannot be undone.')) {\n\t\tawait deleteAllAccounts();\n\t}\n}\n\nasync function deleteAllAccounts() {\n\ttry {\n\t\tawait chrome.storage.sync.clear();\n\t\tawait loadAccounts();\n\t} catch (error) {\n\t\tconsole.error('Failed to delete all data:', error);\n\t\talert('Failed to delete all data. Please try again.');\n\t}\n}\n\nconst confirmClearAllData = async () => {\n\tif (confirm('Are you sure you want to delete all data? This action cannot be undone.')) {\n\t\tawait chrome.storage.sync.clear();\n\t\tawait chrome.storage.local.clear();\n\t\twindow.location.reload();\n\t}\n};\n\nconst confirmChangePassword = async () => {\n\tconst message =\n\t\t'Are you sure you want to change your password? If you do, your current accounts will be unreadable.';\n\tif (confirm(message)) {\n\t\tpasswordFormContainer.classList.remove('hidden');\n\t\tpasswordIsSetContainer.classList.add('hidden');\n\t}\n};\n\nclearAccountsBtn.addEventListener('click', confirmDeleteAllAccounts);\n\nclearAllDataBtn.addEventListener('click', confirmClearAllData);\n\noptionsCloseBtn.addEventListener('click', () => {\n\twindow.close();\n});\n\nchangePasswordBtn.addEventListener('click', confirmChangePassword);\n\nfunction resetCameraAccessMessage() {\n\treqCameraMessage.textContent = defaultReqCameraMessage;\n\treqCameraMessage.classList.remove('error');\n\trequestCameraContainer.classList.add('hidden');\n}\n\nfunction cameraAccessError(message) {\n\treqCameraMessage.textContent = message;\n\treqCameraMessage.classList.add('error');\n\trequestCameraContainer.classList.remove('hidden');\n\tcamAccessGranted.classList.add('hidden');\n}\n\nasync function checkCameraAccess() {\n\tresetCameraAccessMessage();\n\n\ttry {\n\t\t// Check if camera permission has been granted\n\t\tconst permissions = await navigator.permissions.query({ name: 'camera' });\n\n\t\tswitch (permissions.state) {\n\t\t\tcase 'prompt':\n\t\t\t\trequestCameraContainer.classList.remove('hidden');\n\t\t\t\tbreak;\n\t\t\tcase 'denied':\n\t\t\t\tconst message = 'Camera access is denied. Please allow access in your browser settings.';\n\t\t\t\tcameraAccessError(message);\n\t\t\t\tbreak;\n\t\t\tcase 'granted':\n\t\t\t\trequestCameraContainer.classList.add('hidden');\n\t\t\t\tcamAccessGranted.classList.remove('hidden');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcameraAccessError('Unknown camera access state.');\n\t\t\t\tbreak;\n\t\t}\n\t} catch (error) {\n\t\tconsole.warn('Permissions API not supported or error occurred:', error);\n\t}\n}\n\nrequestCameraBtn.addEventListener('click', async () => {\n\ttry {\n\t\tawait navigator.mediaDevices.getUserMedia({ video: true });\n\t\trequestCameraContainer.classList.add('hidden');\n\t\tcamAccessGranted.classList.remove('hidden');\n\t} catch (err) {\n\t\tconst message = 'Unable to access the camera. Please check your browser settings.';\n\t\treqCameraMessage.textContent = message;\n\t\treqCameraMessage.classList.add('error');\n\t}\n});\n\npasswordSubmit.addEventListener('click', async () => {\n\tconst password = passwordInput.value;\n\tlet passwordScore = 0;\n\n\tif (!password) {\n\t\talert('Please enter a password.');\n\t\treturn;\n\t}\n\n\tconst passwordScoreInput = document.getElementById('password-score');\n\tpasswordScore = parseInt(passwordScoreInput.value, 10);\n\n\tif (passwordScore < passwordSettings.minScore) {\n\t\talert('Password is too weak. Please try again.');\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait setPassword(password);\n\t\tawait loadAccounts();\n\t\tpasswordInput.value = '';\n\t\tpasswordIsSetContainer.classList.remove('hidden');\n\t\tpasswordFormContainer.classList.add('hidden');\n\t} catch (error) {\n\t\tconsole.error('Failed to set password:', error);\n\t\talert('Failed to set password. Please try again.');\n\t}\n});\n\ngeneratePasswordBtn.addEventListener('click', () => {\n\tconst password = generatePassword();\n\tpasswordInput.value = password;\n\t// set password type to text to show the generated password\n\tpasswordInput.type = 'text';\n\t// trigger password strength check\n\tpasswordInput.dispatchEvent(new Event('input'));\n});\n\nasync function checkIntroShown() {\n\tconst val = await chrome.storage.local.get('introShown');\n\tif (val.introShown) {\n\t\tintroContainer.classList.add('hidden');\n\t} else {\n\t\tintroContainer.classList.remove('hidden');\n\t}\n}\n\nintroCloseBtn.addEventListener('click', () => {\n\tintroContainer.classList.add('hidden');\n\tchrome.storage.local.set({ introShown: true });\n});\n\nhelpBtn.addEventListener('click', () => {\n\tintroContainer.classList.remove('hidden');\n});\n\n// Initial load\ncheckIntroShown();\nloadAccounts();\ncheckCameraAccess();\n\n// Check if password is already set\npasswordIsSet().then(isSet => {\n\tif (isSet) {\n\t\tpasswordIsSetContainer.classList.remove('hidden');\n\t\tpasswordFormContainer.classList.add('hidden');\n\t} else {\n\t\tpasswordIsSetContainer.classList.add('hidden');\n\t\tpasswordFormContainer.classList.remove('hidden');\n\t}\n});\n"],"names":["async","decryptData","encrypted","ivArray","key","Promise","resolve","reject","chrome","storage","local","get","password","result","encryptionPassword","message","Error","alert","keyMaterial","crypto","subtle","importKey","TextEncoder","encode","name","salt","Uint8Array","deriveKey","iterations","hash","length","getPasswordKey","iv","decrypted","decrypt","decodedString","TextDecoder","decode","JSON","parse","e","base64ToArrayBuffer","base64","binary","atob","bytes","i","charCodeAt","buffer","nouns","verbs","getRandomElement","array","randomArray","Uint32Array","getRandomValues","accountsList","document","getElementById","clearAccountsBtn","clearAllDataBtn","optionsCloseBtn","accountTemplate","requestCameraBtn","requestCameraContainer","reqCameraMessage","camAccessGranted","passwordFormContainer","passwordInput","passwordSubmit","generatePasswordBtn","passwordIsSetContainer","changePasswordBtn","introContainer","introCloseBtn","helpBtn","qrCodeModal","qrCode","closeQrCodeBtn","defaultReqCameraMessage","textContent","loadAccounts","decryptedData","sync","runtime","lastError","decryptedItems","data","Object","entries","value","error","secureGetAll","innerHTML","keys","account","clone","content","cloneNode","span","querySelector","deleteButton","qrButton","issuer","dataset","secret","appendChild","querySelectorAll","forEach","btn","addEventListener","confirmDeleteAccount","showQrCode","console","qr","QRCode","event","button","target","closest","otpauth","clear","makeCode","classList","remove","confirm","secureDelete","cameraAccessError","add","deleteAllAccounts","window","location","reload","close","navigator","mediaDevices","getUserMedia","video","err","passwordScore","passwordScoreInput","parseInt","set","setPassword","words","word","includes","push","join","generatePassword","type","dispatchEvent","Event","introShown","checkIntroShown","permissions","query","state","warn","checkCameraAccess","getPassword","passwordIsSet","then","isSet"],"sourceRoot":""}