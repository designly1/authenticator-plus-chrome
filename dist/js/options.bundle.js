(()=>{"use strict";async function e(e,t){const a=await async function(){return new Promise(((e,t)=>{chrome.storage.local.get(["encryptionPassword"],(async a=>{const n=a.encryptionPassword;if(!n){const e="No password found in local storage. Please set your encryption password in options.";return t(new Error(e)),void alert(e)}const o=await crypto.subtle.importKey("raw",(new TextEncoder).encode(n),{name:"PBKDF2"},!1,["deriveKey"]),r=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]),s=await crypto.subtle.deriveKey({name:"PBKDF2",salt:r,iterations:1e5,hash:"SHA-256"},o,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);e(s)}))}))}(),n=new Uint8Array(t),o=await crypto.subtle.decrypt({name:"AES-GCM",iv:n},a,e),r=(new TextDecoder).decode(o);try{return JSON.parse(r)}catch(e){return r}}function t(e){const t=atob(e),a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);return a.buffer}const a=["Ant","Arc","Arm","Art","Ash","Bag","Bar","Bat","Bay","Bed","Bee","Bit","Box","Boy","Bug","Bus","Cap","Car","Cat","Cow","Cup","Cut","Day","Dog","Dot","Ear","Egg","End","Eye","Fan","Fax","Fig","Fly","Fog","Fox","Fun","Gap","Gas","Gel","Gem","Gym","Hat","Hay","Hen","Hit","Hog","Hot","Hub","Ice","Ink","Jam","Jar","Jet","Jog","Joy","Key","Kid","Kit","Lab","Lap","Law","Leg","Lid","Lip","Log","Man","Map","Mat","Mud","Net","Nut","Oak","Oar","Oil","Owl","Pad","Pan","Pen","Pet","Pie","Pig","Pit","Pot","Rat","Ray","Red","Rib","Rid","Rim","Rip","Row","Rug","Run","Rye","Sad","Saw","Sea","Sew","Sky","Sly","Sun","Tab","Tan","Tap","Tea","Tie","Toe","Toy","Tub","Tug","Van","Vet","Wax","Web","Wig","Win","Wok","Yam","Yen","Zip"],n=["Act","Add","Aim","Air","Ask","Bar","Bat","Beg","Bet","Bid","Boo","Bow","Box","Bud","Bug","Buy","Can","Car","Cat","Cry","Cut","Dig","Dip","Dot","Dry","Dye","Eat","End","Era","Fan","Fax","Fit","Fix","Fog","Fry","Fun","Gap","Gas","Get","Gig","Gin","Gun","Gut","Ham","Hat","Hid","Hit","Hop","Hug","Hum","Ice","Ink","Jam","Jar","Jaw","Jog","Jot","Joy","Jug","Ken","Kid","Kit","Lab","Lag","Lap","Lay","Led","Let","Lit","Log","Lop","Lot","Mad","Map","Mat","Mix","Mop","Mug","Nab","Nap","Nil","Nip","Nod","Nor","Oar","Oil","Pad","Pan","Pat","Pen","Pet","Pit","Pop","Pot","Pug","Put","Qed","Rag","Ran","Rat","Rev","Rid","Rig","Rim","Rip","Rub","Rug","Run","Rut","Sag","Sap","Sat","Saw","Say","Seal","See","Sew","Sin","Sit","Ski","Sky","Sly","Sob","Sow","Spy","Sun","Tab","Tag","Tap","Tax","Tie","Tip","Toe","Top","Tug","Use","Vex","Vie","Wag","Win","Woo","Wry","Yap","Yen","Zip"];function o(e){const t=new Uint32Array(1);return crypto.getRandomValues(t),e[t[0]%e.length]}const r=document.getElementById("accounts-list"),s=document.getElementById("clear-accounts"),c=document.getElementById("clear-all-data-btn"),i=document.getElementById("options-close-btn"),d=document.getElementById("account-template"),l=document.getElementById("req-camera-btn"),u=document.getElementById("req-camera"),m=document.getElementById("req-camera-message"),y=document.getElementById("cam-access-granted"),g=document.getElementById("password-form-container"),w=document.getElementById("password"),p=document.getElementById("submit-password"),h=document.getElementById("generate-password"),E=document.getElementById("password-is-set"),L=document.getElementById("change-password-btn"),f=document.getElementById("intro"),v=document.getElementById("intro-close-btn"),B=document.getElementById("help-btn"),b=document.getElementById("qr-code-modal"),P=document.getElementById("qr-code"),S=document.getElementById("close-qr-code-btn"),k=m.textContent;async function I(){try{const a=await async function(){return new Promise(((a,n)=>{chrome.storage.sync.get(null,(async o=>{if(chrome.runtime.lastError)return void n(new Error(chrome.runtime.lastError.message));const r={};for(const[a,n]of Object.entries(o))if(n&&n.encrypted&&n.iv)try{const o=t(n.encrypted),s=await e(o,n.iv);r[a]=s}catch(e){r[a]=null}else r[a]=n;a(r)}))}))}();if(r.innerHTML="",0===Object.keys(a).length)return void(r.innerHTML='<p id="accounts-list-none">No accounts added yet.</p>');for(const[e,t]of Object.entries(a)){const a=d.content.cloneNode(!0),n=a.querySelector("span"),o=a.querySelector("button.delete-account"),s=a.querySelector("button.show-qr");n.textContent=`[${t.issuer||"No issuer"}] ${t.name}`,o.dataset.key=e,o.dataset.name=t.name,s.dataset.key=e,s.dataset.name=t.name,s.dataset.secret=t.secret,s.dataset.issuer=t.issuer,r.appendChild(a)}document.querySelectorAll("button.delete-account").forEach((e=>{e.addEventListener("click",T)})),document.querySelectorAll("button.show-qr").forEach((e=>{e.addEventListener("click",R)}))}catch(e){console.error("Failed to load accounts:",e),r.innerHTML='<p class="failed-account-error">Failed to load accounts. Please check your encryption password.</p>'}}const A=new QRCode(P);async function R(e){const t=e.target.closest("button.show-qr");if(!t)return;const a=t.dataset.secret,n=t.dataset.issuer,o=`otpauth://totp/${n}:${t.dataset.name}?secret=${a}&issuer=${n}`;A.clear(),A.makeCode(o),b.classList.remove("hidden")}async function T(e){const t=e.target.closest("button.delete-account");if(!t)return;const a=t.dataset.key,n=t.dataset.name;if(confirm(`Are you sure you want to delete ${n}?`))try{await async function(e){if(!e)throw new Error("Invalid key");return new Promise(((t,a)=>{chrome.storage.sync.remove(e,(()=>{chrome.runtime.lastError?a(new Error(chrome.runtime.lastError.message)):t()}))}))}(a),await I()}catch(e){console.error("Failed to delete account:",e),alert("Failed to delete account. Please try again.")}}function F(e){m.textContent=e,m.classList.add("error"),u.classList.remove("hidden"),y.classList.add("hidden")}S.addEventListener("click",(()=>{b.classList.add("hidden")})),s.addEventListener("click",(async function(){confirm("Are you sure you want to delete all accounts? This action cannot be undone.")&&await async function(){try{await chrome.storage.sync.clear(),await I()}catch(e){console.error("Failed to delete all data:",e),alert("Failed to delete all data. Please try again.")}}()})),c.addEventListener("click",(async()=>{confirm("Are you sure you want to delete all data? This action cannot be undone.")&&(await chrome.storage.sync.clear(),await chrome.storage.local.clear(),window.location.reload())})),i.addEventListener("click",(()=>{window.close()})),L.addEventListener("click",(async()=>{confirm("Are you sure you want to change your password? If you do, your current accounts will be unreadable.")&&(g.classList.remove("hidden"),E.classList.add("hidden"))})),l.addEventListener("click",(async()=>{try{await navigator.mediaDevices.getUserMedia({video:!0}),u.classList.add("hidden"),y.classList.remove("hidden")}catch(e){const t="Unable to access the camera. Please check your browser settings.";m.textContent=t,m.classList.add("error")}})),p.addEventListener("click",(async()=>{const e=w.value;let t=0;if(!e)return void alert("Please enter a password.");const a=document.getElementById("password-score");if(t=parseInt(a.value,10),t<3)alert("Password is too weak. Please try again.");else try{await async function(e){if(!e||"string"!=typeof e)throw new Error("Invalid password");return new Promise(((t,a)=>{chrome.storage.local.set({encryptionPassword:e},(()=>{chrome.runtime.lastError?a(new Error(chrome.runtime.lastError.message)):t()}))}))}(e),await I(),w.value="",E.classList.remove("hidden"),g.classList.add("hidden")}catch(e){console.error("Failed to set password:",e),alert("Failed to set password. Please try again.")}})),h.addEventListener("click",(()=>{const e=function(){const e=[];for(;e.length<4;){const t=o(e.length%2==1?n:a);e.includes(t)||e.push(t)}return`${e.join("")}`}();w.value=e,w.type="text",w.dispatchEvent(new Event("input"))})),v.addEventListener("click",(()=>{f.classList.add("hidden"),chrome.storage.local.set({introShown:!0})})),B.addEventListener("click",(()=>{f.classList.remove("hidden")})),async function(){(await chrome.storage.local.get("introShown")).introShown?f.classList.add("hidden"):f.classList.remove("hidden")}(),I(),async function(){m.textContent=k,m.classList.remove("error"),u.classList.add("hidden");try{switch((await navigator.permissions.query({name:"camera"})).state){case"prompt":u.classList.remove("hidden");break;case"denied":F("Camera access is denied. Please allow access in your browser settings.");break;case"granted":u.classList.add("hidden"),y.classList.remove("hidden");break;default:F("Unknown camera access state.")}}catch(e){console.warn("Permissions API not supported or error occurred:",e)}}(),async function(){return null!==await async function(){return new Promise(((e,t)=>{chrome.storage.local.get(["encryptionPassword"],(t=>{const a=t.encryptionPassword;e(a||null)}))}))}()}().then((e=>{e?(E.classList.remove("hidden"),g.classList.add("hidden")):(E.classList.add("hidden"),g.classList.remove("hidden"))}))})();
//# sourceMappingURL=options.bundle.js.map